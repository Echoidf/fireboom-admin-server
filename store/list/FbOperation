[
	{
		"content": "mutation Login($code: String = \"\", $password: String = \"\", $countryCode: String = \"CN\", $loginType: String = \"\", $phone: String = \"\", $username: String = \"\") {\n  casdoor_apiLogin(\n    POSTApiLoginInput: {code: $code, password: $password, loginType: $loginType, username: $username, phone: $phone, countryCode: $countryCode}\n  ) {\n    msg\n    success\n    data {\n      accessToken\n      expireIn\n      refreshToken\n    }\n  }\n} ",
		"createTime": "2023-06-21 07:29:59Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1997304928337920,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/Casdoor/Login",
		"updateTime": "2023-07-14 01:29:40Z"
	},
	{
		"content": "mutation MyQuery($clientId: String!, $clientSecret: String!, $signName: String!, $templateCode: String!) @rbac(requireMatchAny: [admin, user]) {\n  casdoor_apiUpdateProvider(\n    POSTApiUpdate_providerInput: {clientId: $clientId, clientSecret: $clientSecret, signName: $signName, templateCode: $templateCode}\n  ) {\n    msg\n  }\n}",
		"createTime": "2023-06-21 07:31:33Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1997311100911616,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\"]",
		"title": "/Casdoor/UpdateSMSProvider",
		"updateTime": "2023-07-18 04:28:03Z"
	},
	{
		"content": "mutation QueryRaw ($query: String!) {\n\tmain_queryRaw(query: $query)\n}\n",
		"createTime": "2023-06-25 05:44:48Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2019540587708416,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\"]",
		"title": "/Statistics/QueryRaw",
		"updateTime": "2023-07-17 03:28:51Z"
	},
	{
		"content": "mutation BindRoleApis($allRoles: [String]!, $apis: [Int]!, $roleCode: String!) {\n  system_bindRoleApis(\n    POSTApiV1RoleBindApiInput: {apis: $apis, allRoles: $allRoles, roleCode: $roleCode}\n  ) {\n    count\n  }\n}",
		"createTime": "2023-03-28 10:10:29Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1516639652216832,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Role/BindRoleApis",
		"updateTime": "2023-07-07 07:43:27Z"
	},
	{
		"content": "mutation CreateOnePost ($title: String!, $poster: String, $content: String, $publishedAt: DateTime, $username: String!) @rbac(requireMatchAny: [user,admin]) {\n\tdata: main_createOnepost(data: {title:$title,poster:$poster,published_at:$publishedAt,author:$username,content:$content}) {\n\t\tid\n\t\ttitle\n\t\tposter\n\t\tpublished_at\n\t\tauthor\n\t}\n}\n",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776042184704,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\"]",
		"title": "/Post/CreateOne",
		"updateTime": "2023-07-11 04:25:50Z"
	},
	{
		"content": "mutation DeleteOnePost ($id: Int!) @rbac(requireMatchAny: [user,admin]) {\n\tdata: main_deleteOnepost(where: {id:$id}) {\n\t\tid\n\t}\n}\n",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776043888640,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\"]",
		"title": "/Post/DeleteOne",
		"updateTime": "2023-07-11 01:49:24Z"
	},
	{
		"content": "mutation UpdateOnePost ($id: Int!, $title: String, $poster: String, $publishedAt: DateTime, $content: String!) @rbac(requireMatchAny: [user,admin,eeee]) {\n\tdata: main_updateOnepost(data: {title:{set:$title},poster:{set:$poster},published_at:{set:$publishedAt},content:{set:$content}}, where: {id:$id}) {\n\t\tid\n\t\ttitle\n\t\tposter\n\t\tpublished_at\n\t\tauthor\n\t\tcontent\n\t}\n}\n",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776045789184,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\",\"eeee\"]",
		"title": "/Post/UpdateOne",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "query GetOnePost ($id: Int!) @rbac(requireMatchAny: [user,admin,eeee]) {\n\tdata: main_findFirstpost(where: {id:{equals:$id}}) {\n\t\tid\n\t\ttitle\n\t\tposter\n\t\tpublished_at\n\t\tauthor\n\t\tcontent\n\t}\n}\n",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776047689728,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\",\"eeee\"]",
		"title": "/Post/GetOne",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "query GetPostList ($take: Int = 10, $skip: Int = 0, $query: main_postWhereInput) @rbac(requireMatchAny: [user,admin,eeee]) {\n\tdata: main_findManypost(skip: $skip, take: $take, where: {AND:$query}, orderBy: {title:asc}) {\n\t\tid\n\t\ttitle\n\t\tposter\n\t\tpublished_at\n\t\tauthor\n\t\tcontent\n\t}\n\ttotal: main_aggregatepost(where: {AND:$query}) @transform(get: \"_count.id\") {\n\t\t_count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776049197056,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\",\"eeee\"]",
		"title": "/Post/GetList",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "mutation DeleteManyPost ($ids: [Int]!) @rbac(requireMatchAny: [user,admin,eeee]) {\n\tdata: main_deleteManypost(where: {id:{in:$ids}}) {\n\t\tcount\n\t}\n}\n",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776050704384,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\",\"eeee\"]",
		"title": "/Post/DeleteMany",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "mutation MyQuery ($countryCode: String = \"CN\", $name: String!, $password: String = \"\", $passwordType: String = \"plain\", $phone: String!) @rbac(requireMatchAny: [admin,user,eeee]) {\n\tdata: casdoor_apiAddUser(POSTApiAdd_userInput: {phone:$phone,name:$name,password:$password,passwordType:$passwordType,countryCode:$countryCode}) {\n\t\tmsg\n\t\tstatus\n\t}\n}\n",
		"createTime": "2023-03-29 09:36:47Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1522169491947520,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\",\"eeee\"]",
		"title": "/System/User/CreateOne",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "query MyQuery ($name: String, $phone: String, $userId: Int, $roleId: Int) @rbac(requireMatchAny: [admin,user,eeee]) {\n\tdata: main_findFirstuser(where: {OR:[{name:{equals:$name}},{phone:{equals:$phone}}]}) {\n\t\tid @export(as: \"userId\")\n\t\tavatar\n\t\troles: _join @transform(get: \"main_findManyrole_user\") {\n\t\t\tmain_findManyrole_user(where: {user_id:{equals:$userId}}) @transform(get: \"[]._join.main_findFirstrole.code\") {\n\t\t\t\trole_id @export(as: \"roleId\")\n\t\t\t\t_join {\n\t\t\t\t\tmain_findFirstrole(where: {id:{equals:$roleId}}) {\n\t\t\t\t\t\tcode\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tname\n\t}\n}\n",
		"createTime": "2023-03-29 09:36:58Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1522170168147968,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\",\"eeee\"]",
		"title": "/System/User/GetOne",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "query MyQuery @rbac(requireMatchAny: [admin]) {\n\tdata: main_aggregateuser {\n\t\tcount: _count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
		"createTime": "2023-03-30 06:40:18Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1527137852391424,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/User/CountUsers",
		"updateTime": "2023-07-16 13:08:40Z"
	},
	{
		"content": "query MyQuery {\n\tdata: statistics_GetMonthlySales {\n\t\tmonths\n\t\ttotalSales\n\t}\n}\n",
		"createTime": "2023-04-02 15:23:41Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546182777700352,
		"illegal": true,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/Statistics/MonthlySales",
		"updateTime": "2023-07-17 08:34:33Z"
	},
	{
		"content": "query MyQuery {\n  data: statistics_GetSalesTop10 {\n    shopName\n    totalSales\n  }\n}",
		"createTime": "2023-04-02 15:24:39Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546186559717376,
		"illegal": true,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Statistics/SalesTop10",
		"updateTime": "2023-06-27 01:36:09Z"
	},
	{
		"content": "query MyQuery {\n  data: statistics_GetVisitTrending {\n    count\n    days\n  }\n} ",
		"createTime": "2023-04-02 15:24:59Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546187863556096,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Statistics/VisitTrending",
		"updateTime": "2023-07-17 03:29:06Z"
	},
	{
		"content": "query MyQuery {\n  data: statistics_GetSaleTypePercent {\n    typeId\n    typeName\n    totalSales\n  }\n}",
		"createTime": "2023-04-02 15:26:10Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546192569499648,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Statistics/SaleTypePercent",
		"updateTime": "2023-07-17 03:31:22Z"
	},
	{
		"content": "query MyQuery ($skip: Int!, $take: Int!, $query: main_userWhereInput = {}, $orderBy: [main_userOrderByWithRelationInput]) @rbac(requireMatchAny: [admin,user]) {\n\tdata: main_findManyuser(skip: $skip, take: $take, where: {AND:$query}, orderBy: $orderBy) {\n\t\tid\n\t\tname\n\t\tavatar\n\t\tcreatedAt: created_at\n\t}\n}\n",
		"createTime": "2023-04-03 08:02:11Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1550109012197376,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\"]",
		"title": "/System/User/GetList",
		"updateTime": "2023-07-18 09:49:23Z"
	},
	{
		"content": "query MyQuery {\n  data: main_findManyrole {\n    code\n    remark\n    id\n  }\n}",
		"createTime": "2023-04-03 09:10:15Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1550376685862912,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Role/GetMany",
		"updateTime": "2023-07-04 06:20:05Z"
	},
	{
		"content": "mutation MyQuery($roleId: Int!, $userId: Int = 10) {\n  data: main_deleteOnerole_user(\n    where: {role_id_user_id: {role_id: $roleId, user_id: $userId}}\n  ) {\n    id\n  }\n}",
		"createTime": "2023-04-03 10:04:05Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1550588367863808,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/User/DisconnectRole",
		"updateTime": "2023-07-15 08:38:12Z"
	},
	{
		"content": "mutation MyQuery($userId: Int!, $roleId: Int!) {\n  data: main_createOnerole_user(data: {role_id: $roleId, user_id: $userId}) {\n    id\n  }\n}",
		"createTime": "2023-04-03 10:07:39Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1550602374742016,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/User/ConnectRole",
		"updateTime": "2023-07-15 08:38:22Z"
	},
	{
		"content": "query MyQuery($userId: Int!, $roleId: Int @internal) {\n  data: main_findManyrole_user(where: {user_id: {equals: $userId}}) @transform(get: \"[].data\") {\n    role_id @export(as: \"roleId\")\n    data: _join @transform(get: \"main_findFirstrole\") {\n      main_findFirstrole(where: {id: {equals: $roleId}}) {\n        remark\n        code\n        id\n      }\n    }\n  }\n}",
		"createTime": "2023-04-03 15:29:59Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1551869868703744,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/User/GetUserRole",
		"updateTime": "2023-07-04 06:05:39Z"
	},
	{
		"content": "mutation MyQuery ($code: String!, $remark: String!) @rbac(requireMatchAny: [admin,user,eeee]) {\n\tdata: main_createOnerole(data: {code:$code,remark:$remark}) {\n\t\tid\n\t\tcode\n\t\tremark\n\t}\n}\n",
		"createTime": "2023-04-04 01:18:27Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554183815364608,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\",\"eeee\"]",
		"title": "/System/Role/AddOne",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "mutation MyQuery ($code: String!) @rbac(requireMatchAny: [admin,user,eeee]) {\n\tdata: main_deleteOnerole(where: {code:$code}) {\n\t\tid\n\t}\n}\n",
		"createTime": "2023-04-04 01:18:31Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554184073641984,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\",\"eeee\"]",
		"title": "/System/Role/DeleteOne",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "mutation MyQuery ($remark: String, $id: Int!) @rbac(requireMatchAny: [admin,user,eeee]) {\n\tdata: main_updateOnerole(data: {remark:{set:$remark}}, where: {id:$id}) {\n\t\tcode\n\t\tid\n\t\tremark\n\t}\n}\n",
		"createTime": "2023-04-04 01:19:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554189253935104,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\",\"eeee\"]",
		"title": "/System/Role/UpdateOne",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "mutation MyQuery ($ids: [Int]) {\n\tdata: main_deleteManyrole(where: {id:{in:$ids}}) {\n\t\tcount\n\t}\n}\n",
		"createTime": "2023-04-04 01:56:47Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554334568742912,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Role/DeleteMany",
		"updateTime": "2023-07-16 13:41:01Z"
	},
	{
		"id": 1554494005051392,
		"method": "GET",
		"restUrl": "",
		"operationType": "queries",
		"isPublic": true,
		"remark": "",
		"illegal": false,
		"liveQuery": false,
		"title": "/System/Role/GetList",
		"content": "query GetRoleList ($take: Int = 10, $skip: Int = 0, $orderBy: [main_roleOrderByWithRelationInput], $query: main_roleWhereInput) @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManyrole(skip: $skip, take: $take, orderBy: $orderBy, where: {AND:$query}) {\n\t\tid\n\t\tcode\n\t\tremark\n\t}\n\ttotal: main_aggregaterole(where: {AND:$query}) @transform(get: \"_count.id\") {\n\t\t_count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
		"enabled": true,
		"createTime": "2023-04-04 02:37:20Z",
		"updateTime": "2023-07-18 09:49:23Z",
		"deleteTime": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]"
	},
	{
		"content": "mutation CreateOneMenu ($label: String!, $path: String!, $icon: String, $level: Int!, $sort: Int!, $parentId: Int, $menuType: String!, $perms: String = \"\") @rbac(requireMatchAny: [admin,user]) {\n\tdata: main_createOnemenu(data: {label:$label,path:$path,icon:$icon,level:$level,sort:$sort,parentId:$parentId,menu_type:$menuType,perms:$perms}) {\n\t\tid\n\t}\n}\n",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625692434432,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\"]",
		"title": "/System/Menu/CreateOne",
		"updateTime": "2023-07-18 07:40:18Z"
	},
	{
		"content": "mutation DeleteOneMenu($id: Int!) {\n  data: main_deleteOnemenu(where: {id: $id}) {\n    id\n  }\n}",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625694728192,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Menu/DeleteOne",
		"updateTime": "2023-07-16 10:56:20Z"
	},
	{
		"content": "mutation UpdateOneMenu ($id: Int!, $label: String, $path: String, $icon: String, $sort: Int, $level: Int) @rbac(requireMatchAny: [admin,user,eeee]) {\n\tdata: main_updateOnemenu(data: {label:{set:$label},path:{set:$path},icon:{set:$icon},sort:{set:$sort},level:{set:$level}}, where: {id:$id}) {\n\t\tid\n\t\tparentId\n\t\tlabel\n\t\tpath\n\t\ticon\n\t\tsort\n\t\tlevel\n\t}\n}\n",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625695514624,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\",\"eeee\"]",
		"title": "/System/Menu/UpdateOne",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "query GetMenuList($take: Int = 10, $skip: Int = 0, $orderBy: [main_menuOrderByWithRelationInput], $query: main_menuWhereInput) {\n  data: main_findManymenu(\n    skip: $skip\n    take: $take\n  orderBy: $orderBy\n    where: {AND: $query}) {\n    \n    id\n    parentId\n    label\n    path\n    icon\n    sort\n    level\n  }\n  total: main_aggregatemenu(where: {AND: $query}) @transform(get: \"_count.id\") {\n    _count {\n      id\n    }\n  }\n}",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625697284096,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Menu/GetList",
		"updateTime": "2023-06-30 06:08:22Z"
	},
	{
		"content": "query GetOneMenu ($id: Int!) @rbac(requireMatchAny: [admin,user,eeee]) {\n\tdata: main_findFirstmenu(where: {id:{equals:$id}}) {\n\t\tid\n\t\tparentId\n\t\tlabel\n\t\tpath\n\t\ticon\n\t\tsort\n\t\tlevel\n\t}\n}\n",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625699119104,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\",\"eeee\"]",
		"title": "/System/Menu/GetOne",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "mutation DeleteManyMenu ($ids: [Int]!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_deleteManymenu(where: {id:{in:$ids}}) {\n\t\tcount\n\t}\n}\n",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625701085184,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Menu/DeleteMany",
		"updateTime": "2023-07-11 01:49:25Z"
	},
	{
		"content": "query GetManyMenu {\n  data: main_findManymenu {\n    id\n    parentId\n    label\n    path\n    icon\n    sort\n    level\n    is_bottom\n    menu_type\n    perms\n    api_id\n    create_time\n  }\n}",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625702789120,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Menu/GetMany",
		"updateTime": "2023-07-17 05:46:30Z"
	},
	{
		"content": "query MyQuery {\n  data: system_getAllApis {\n    createTime\n    id\n    liveQuery\n    method\n    operationType\n    title\n    enabled\n  }\n}",
		"createTime": "2023-04-04 03:51:04Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554783933628416,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[]",
		"title": "/System/Operation/GetMany",
		"updateTime": "2023-07-04 09:08:36Z"
	},
	{
		"content": "mutation MyQuery($dest: String!, $countryCode: String = \"CN\") {\n  data: casdoor_apiSendVerificationCode(\n    POSTApiSend_verification_codeInput: {dest: $dest, countryCode: $countryCode}\n  ) {\n    msg\n  }\n}",
		"createTime": "2023-06-25 06:38:26Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2019751503921152,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Casdoor/SendCode",
		"updateTime": "2023-07-14 01:30:11Z"
	},
	{
		"content": "mutation MyQuery ($data: [main_permissionCreateManyInput]!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_createManypermission(skipDuplicates: true, data: $data) {\n\t\tcount\n\t}\n}\n",
		"createTime": "2023-06-30 09:23:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2048711798882304,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Perm/CreateMany",
		"updateTime": "2023-07-11 01:49:25Z"
	},
	{
		"content": "query MyQuery($pid: Int!) {\n  data: main_findManymenu(where: {parentId: {equals: $pid}}) {\n    id\n    label\n    level\n    name\n    path\n    sort\n  }\n}",
		"createTime": "2023-07-03 05:30:11Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2064781612351488,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Menu/GetChildrenMenus",
		"updateTime": "2023-07-16 08:32:37Z"
	},
	{
		"content": "query MyQuery($menuId: Int!, $permId: BigInt @internal) {\n  data: main_findManymenu_permission(where: {menu_id: {equals: $menuId}}) @transform(get: \"[]._join.main_findFirstpermission\") {\n    perm_id @export(as: \"permId\")\n    _join {\n      main_findFirstpermission(where: {id: {equals: $permId}}) {\n        createdAt\n        enabled\n        id\n        method\n        path\n      }\n    }\n  }\n}",
		"createTime": "2023-07-03 05:32:15Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2064789703557120,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[]",
		"title": "/System/Menu/GetMenuPerms",
		"updateTime": "2023-07-07 07:43:28Z"
	},
	{
		"content": "query MyQuery($name: String!, $menuId: Int @internal, $permId: BigInt @internal) {\n  data: main_findFirstmenu(where: {name: {equals: $name}}) @transform(get: \"_join\") {\n    id @export(as: \"menuId\")\n    _join @transform(get: \"main_findManymenu_permission\") {\n      main_findManymenu_permission(where: {menu_id: {equals: $menuId}}) @transform(get: \"[]._join.main_findFirstpermission.path\") {\n        perm_id @export(as: \"permId\")\n        _join {\n          main_findFirstpermission(where: {id: {equals: $permId}, enabled: {equals: 1}}) {\n            path\n          }\n        }\n      }\n    }\n  }\n}",
		"createTime": "2023-07-04 02:41:00Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2069778619629568,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Perm/GetMany",
		"updateTime": "2023-07-07 04:05:39Z"
	},
	{
		"content": "query MyQuery ($pid: Int) @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManymenu(where: {level:{equals:1}}, orderBy: {sort:asc}) {\n\t\tid @export(as: \"pid\")\n\t\tpath\n\t\tlabel\n\t\tname\n\t\tsort\n\t\tchildren: _join @transform(get: \"main_findManymenu\") {\n\t\t\tmain_findManymenu(where: {parentId:{equals:$pid}}, orderBy: {sort:asc}) {\n\t\t\t\tid\n\t\t\t\tpath\n\t\t\t\tname\n\t\t\t\tlabel\n\t\t\t\tsort\n\t\t\t}\n\t\t}\n\t}\n}\n",
		"createTime": "2023-07-04 05:02:57Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2070336836009984,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/GetMenus",
		"updateTime": "2023-07-16 13:06:36Z"
	},
	{
		"content": "query MyQuery ($id: Int!) @rbac(requireMatchAny: [admin,user,eeee]) {\n\tdata: main_findFirstrole(where: {id:{equals:$id}}) {\n\t\tcode\n\t}\n}\n",
		"createTime": "2023-07-04 05:37:28Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2070472516632576,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\",\"eeee\"]",
		"title": "/System/Role/GetOne",
		"updateTime": "2023-07-18 06:11:15Z"
	},
	{
		"content": "query MyQuery {\n  data: main_findManypermission {\n    createdAt\n    enabled\n    method\n    path\n  }\n}",
		"createTime": "2023-07-05 06:37:06Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2076369364385792,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Perm/GetBindPerms",
		"updateTime": "2023-07-05 07:17:00Z"
	},
	{
		"content": "query MyQuery($code: [String]!, $roleId: Int @internal, $menuId: Int @internal) {\n  data: main_findManyrole(where: {code: {in: $code}}) {\n    id @export(as: \"roleId\")\n    _join {\n     data:  main_findManymenu_role(where: {role_id: {equals: $roleId}}) @transform(get: \"[]._join.main_findFirstmenu.perms\") {\n        menu_id @export(as: \"menuId\")\n        _join {\n          main_findFirstmenu(where: {id: {equals: $menuId}}) {\n            perms\n          }\n        }\n      }\n    }\n  }\n}",
		"createTime": "2023-07-06 08:48:26Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2082548108623872,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Perm/GetRolePerms",
		"updateTime": "2023-07-18 06:16:09Z"
	},
	{
		"content": "query MyQuery($userId: String!, $id: Int @internal, $roleId: Int @internal) {\n  data: main_findFirstuser(where: {user_id: {equals: $userId}}) @transform(get: \"_join.main_findManyrole_user\") {\n    id @export(as: \"id\")\n    _join {\n      main_findManyrole_user(where: {user_id: {equals: $id}}) @transform(get: \"[]._join\") {\n        role_id @export(as: \"roleId\")\n        _join @transform(get: \"main_findFirstrole.code\") {\n          main_findFirstrole(where: {id: {equals: $roleId}}) {\n            code\n          }\n        }\n      }\n    }\n  }\n} ",
		"createTime": "2023-07-11 02:34:27Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2109389094518784,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Casdoor/GetRolesById",
		"updateTime": "2023-07-11 07:53:12Z"
	},
	{
		"content": "query MyQuery($roleId: Int!) {\n  data: main_findManymenu_role(where: {role_id: {equals: $roleId}}) @transform(get: \"[].menu_id\") {\n    menu_id\n  }\n}",
		"createTime": "2023-07-17 04:30:49Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2143820475138048,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Role/GetRoleMenuId",
		"updateTime": "2023-07-17 05:37:41Z"
	},
	{
		"content": "query MyQuery($level: Int, $pid: Int) {\n  data: main_findManymenu(where: {OR: [{level: {equals: $level}}, {parentId: {equals: $pid}}]}) {\n    id\n    label\n    is_bottom\n  }\n}",
		"createTime": "2023-07-17 04:50:33Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2143898110918656,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Menu/GetMenuByLevelOrPid",
		"updateTime": "2023-07-17 05:04:57Z"
	},
	{
		"content": "mutation MyQuery($data: [main_menu_roleCreateManyInput]!) {\n  data: main_createManymenu_role(data: $data) {\n    count\n  }\n}",
		"createTime": "2023-07-17 09:21:03Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2144961756004352,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Role/BindMenus",
		"updateTime": "2023-07-17 12:28:52Z"
	},
	{
		"content": "query MyQuery($menuIds: [Int]!) {\n  data: main_findManymenu(where: {id: {in: $menuIds}}) @transform(get: \"[].api_id\") {\n    api_id\n  }\n}",
		"createTime": "2023-07-17 11:21:42Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2145436175368192,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Menu/GetApisByMenus",
		"updateTime": "2023-07-17 11:22:51Z"
	},
	{
		"content": "mutation MyQuery($roleId: Int!, $menuIds: [Int]!) {\n  main_deleteManymenu_role(\n    where: {role_id: {equals: $roleId}, menu_id: {in: $menuIds}}\n  ) {\n    count\n  }\n}",
		"createTime": "2023-07-17 12:57:29Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2145812813840384,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Role/UnBindMenus",
		"updateTime": "2023-07-17 13:26:37Z"
	},
	{
		"content": "mutation MyQuery($apis: [Int]!, $roleCode: String!) {\n  system_unBindRoleApis(\n    POSTApiV1RoleUnbindApiInput: {roleCode: $roleCode, apis: $apis}\n  ) {\n    count\n  }\n}",
		"createTime": "2023-07-18 01:00:08Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2148654364557312,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Role/UnBindRoleApis",
		"updateTime": "2023-07-18 08:48:07Z"
	}
]